DROP SCHEMA IF EXISTS fitness;

SET NAMES latin1;

BEGIN;
CREATE DATABASE IF NOT EXISTS fitness;
COMMIT;

USE fitness;


CREATE TABLE Centro (
    CodCentro INTEGER NOT NULL AUTO_INCREMENT,
    Indirizzo VARCHAR(255) NOT NULL,
    NumeroTelefonico INTEGER NOT NULL,
    Dimensione INTEGER NOT NULL,
    MaxClienti INTEGER NOT NULL,
    ClientiPresenti INTEGER NOT NULL,
    Direttore VARCHAR(255) NOT NULL,
    PRIMARY KEY (CodCentro)
    
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;

CREATE TABLE Turnazione (
    CodTurnazione INTEGER NOT NULL AUTO_INCREMENT,
    OraInizioTurno TIME NOT NULL,
    OraFineTurno TIME NOT NULL,
    Centro INTEGER NOT NULL,
    Giorno VARCHAR(255) NOT NULL,
    Dipendente VARCHAR(255) NOT NULL,
    PRIMARY KEY (CodTurnazione)
    
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;

CREATE TABLE Rata (
    CodRata INTEGER NOT NULL AUTO_INCREMENT,
    DataScadenza DATE NOT NULL,
    Importo DOUBLE NOT NULL,
    Stato ENUM('Eseguito','Non ancora dovuto', 'Scaduto'),
    Cliente VARCHAR(255) NOT NULL,
    IstitutoFinanziario INTEGER NOT NULL,
    PRIMARY KEY (CodRata)
    
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;


CREATE TABLE IstitutoFinanziario (
    CodIstituto INTEGER NOT NULL AUTO_INCREMENT,
    RagioneSociale VARCHAR(255) NOT NULL,
    TassoInteresse DOUBLE NOT NULL,
    PRIMARY KEY (CodIstituto)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;


CREATE TABLE Convenzione (
    Istituto INTEGER NOT NULL,
    Centro INTEGER NOT NULL,
    PRIMARY KEY (Istituto , Centro)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;


CREATE TABLE OrarioDiServizio (
    CodOrario INTEGER NOT NULL AUTO_INCREMENT,
    OrarioApertura TIME NOT NULL,
    OrarioChiusura TIME NOT NULL,
    Centro INTEGER NOT NULL,
    Giorno VARCHAR(255) NOT NULL,
    PRIMARY KEY (CodOrario)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;


CREATE TABLE Giorno (
    Nome VARCHAR(255) NOT NULL,
    PRIMARY KEY (Nome)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;


CREATE TABLE PianificazioneCorso (
    Giorno VARCHAR(255) NOT NULL,
    Luogo INTEGER NOT NULL,
    Corso INTEGER NOT NULL,
    OraInizioCorso TIME NOT NULL,
    OraFineCorso TIME NOT NULL,
    PRIMARY KEY (Giorno , Luogo , Corso)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;

CREATE TABLE LuogoAllenamento (
    CodLuogo INTEGER NOT NULL AUTO_INCREMENT,
    Centro INTEGER NOT NULL,
    PRIMARY KEY (CodLuogo)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;


CREATE TABLE Sala (
    Luogo INTEGER NOT NULL AUTO_INCREMENT,
    Nome VARCHAR(255) NOT NULL,
    ResponsabileSala VARCHAR(255) NOT NULL,
    PRIMARY KEY (Luogo)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;

CREATE TABLE Piscina (
    Luogo INTEGER NOT NULL AUTO_INCREMENT,
    Dimensione DOUBLE NOT NULL,
    PRIMARY KEY (Luogo)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;


CREATE TABLE Dipendente (
    CodFiscale VARCHAR(255) NOT NULL,
    Nome VARCHAR(255) NOT NULL,
    Cognome VARCHAR(255) NOT NULL,
    DataNascita DATE NOT NULL,
    Prefettura VARCHAR(255) NOT NULL,
    CodDocumento INTEGER NOT NULL,
    Indirizzo VARCHAR(255) NOT NULL,
    ResponsabilePersonale VARCHAR(255),
    PRIMARY KEY (CodFiscale)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;


CREATE TABLE Impiego (
    Centro INTEGER NOT NULL,
    Dipendente VARCHAR(255) NOT NULL,
    Mansione VARCHAR(255) NOT NULL,
    PRIMARY KEY (Centro , Dipendente)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;


CREATE TABLE Attrezzatura (
    CodAttrezzatura INTEGER NOT NULL AUTO_INCREMENT,
    Tipologia VARCHAR(255) NOT NULL,
    ConsumoEnergetico INTEGER NOT NULL,
    Usura INTEGER NOT NULL,
    Sala INTEGER NOT NULL,
    PRIMARY KEY (CodAttrezzatura)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;




CREATE TABLE Regolazione (
    Attrezzatura INTEGER NOT NULL,
    NomeRegolazione VARCHAR(255) NOT NULL,
    PRIMARY KEY (Attrezzatura , NomeRegolazione)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;


CREATE TABLE ConfigurazioneEsercizio (
    CodConfigurazione INTEGER NOT NULL AUTO_INCREMENT,
    Esercizio INTEGER NOT NULL,
    Attrezzatura INTEGER NOT NULL,
    PRIMARY KEY (CodConfigurazione)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;

CREATE TABLE RegolazioneEsercizio (
    Configurazione INTEGER NOT NULL,
    Attrezzatura INTEGER NOT NULL,
    NomeRegolazione VARCHAR(255) NOT NULL,
    Valore INTEGER NOT NULL,
    PRIMARY KEY (Configurazione , Attrezzatura , NomeRegolazione)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;


CREATE TABLE Spogliatoio (
    CodSpogliatoio INTEGER NOT NULL AUTO_INCREMENT,
    Capienza INTEGER NOT NULL,
    PostiDisponibili INTEGER NOT NULL,
    Posizione ENUM('N', 'S', 'E', 'W') NOT NULL,
    Centro INTEGER NOT NULL,
    PRIMARY KEY (CodSpogliatoio)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;


CREATE TABLE Armadietto (
    CodArmadietto INTEGER NOT NULL AUTO_INCREMENT,
    Combinazione INTEGER NOT NULL,
    Spogliatoio INTEGER NOT NULL,
    PRIMARY KEY (CodArmadietto)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;

CREATE TABLE Accesso (
    CodAccesso INTEGER NOT NULL AUTO_INCREMENT,
    TimestampIngresso DATETIME NOT NULL,
    TimestampUscita DATETIME,
    Centro INTEGER NOT NULL,
    Cliente VARCHAR(255) NOT NULL,
    Armadietto INTEGER NOT NULL,
    PRIMARY KEY (CodAccesso)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;


CREATE TABLE Medico (
    CodFiscale VARCHAR(255) NOT NULL,
    PRIMARY KEY (CodFiscale)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;


CREATE TABLE Visita (
    CodVisita INTEGER NOT NULL AUTO_INCREMENT,
    DataVisita DATE NOT NULL,
    Medico VARCHAR(255) NOT NULL,
    Cliente VARCHAR(255) NOT NULL,
    PRIMARY KEY (CodVisita)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;

CREATE TABLE Cliente (
    CodFiscale VARCHAR(255) NOT NULL,
    Nome VARCHAR(255) NOT NULL,
    Cognome VARCHAR(255) NOT NULL,
    Indirizzo VARCHAR(255) NOT NULL,
    DataNascita DATE NOT NULL,
    CodDocumento INTEGER NOT NULL,
    Prefettura VARCHAR(255) NOT NULL,
    Username VARCHAR(255) NOT NULL,
    Password VARCHAR(255) NOT NULL,
    VisiteMedico INTEGER NOT NULL,
    Medico VARCHAR(255) NOT NULL,
    Tutor VARCHAR(255) NOT NULL,
    Scopo ENUM('Dimagrimento', 'PotenziamentoMuscolare', 'Ricreativo') NOT NULL,
    PRIMARY KEY (CodFiscale),
    UNIQUE(Username)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;


CREATE TABLE Corso (
    CodCorso INTEGER NOT NULL AUTO_INCREMENT,
    DataInizioCorso DATE NOT NULL,
    DataFineCorso DATE NOT NULL,
    Livello ENUM('Principiante', 'Avanzato', 'Esperto', 'Campione', 'Agonista') NOT NULL,
    MaxPartecipanti INTEGER NOT NULL,
    Istruttore VARCHAR(255) NOT NULL,
    Disciplina VARCHAR(255) NOT NULL,
    PRIMARY KEY (CodCorso)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;

CREATE TABLE Istruttore (
    CodFiscale VARCHAR(255) NOT NULL,
    PRIMARY KEY (CodFiscale)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;

CREATE TABLE ResponsabilePersonale (
    CodFiscale VARCHAR(255) NOT NULL,
    PRIMARY KEY (CodFiscale)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;


CREATE TABLE Direttore (
    CodFiscale VARCHAR(255) NOT NULL,
    PRIMARY KEY (CodFiscale)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;


CREATE TABLE ResponsabileSala (
    CodFiscale VARCHAR(255) NOT NULL,
    PRIMARY KEY (CodFiscale)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;

CREATE TABLE Tutor (
    CodFiscale VARCHAR(255) NOT NULL,
    PRIMARY KEY (CodFiscale)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;


CREATE TABLE Consulente (
    CodFiscale VARCHAR(255) NOT NULL,
    PRIMARY KEY (CodFiscale)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;

CREATE TABLE Iscrizione (
    Cliente VARCHAR(255) NOT NULL,
    Corso INTEGER NOT NULL,
    PRIMARY KEY (Cliente , Corso)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;

CREATE TABLE Contratto (
    CodContratto INTEGER NOT NULL AUTO_INCREMENT,
    Durata INTEGER NOT NULL,
    Tipologia ENUM('Standard', 'Personalizzato','Multisede') NOT NULL,
    DataSottoscrizione DATE NOT NULL,
    Importo DOUBLE NOT NULL,
    ModalitaDiPagamento ENUM('UnicaSoluzione', 'Rateale') NOT NULL,
    Cliente VARCHAR(255) NOT NULL,
    Consulente VARCHAR(255) NOT NULL,
    Centro INTEGER NOT NULL,
    PRIMARY KEY (CodContratto)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;

CREATE TABLE Offerta (
    CodOfferta INTEGER NOT NULL AUTO_INCREMENT,
    TipoOfferta VARCHAR(255) NOT NULL,
    MaxIngressi INTEGER NOT NULL,
    AccessiPiscine INTEGER NOT NULL,
    CostoMensile DOUBLE NOT NULL,
    Centro INTEGER NOT NULL,
    PRIMARY KEY (CodOfferta)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;


CREATE TABLE InclusioneOfferta (
    Contratto INTEGER NOT NULL,
    Offerta INTEGER NOT NULL,
    PRIMARY KEY (Contratto , Offerta)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;


CREATE TABLE OffertaLuogo (
    Offerta INTEGER NOT NULL,
    Luogo INTEGER NOT NULL,
    PRIMARY KEY (Offerta , Luogo)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;


CREATE TABLE OffertaCorso (
    Offerta INTEGER NOT NULL,
    Corso INTEGER NOT NULL,
    PRIMARY KEY (Offerta , Corso)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;


CREATE TABLE Scopo (
    NomeScopo ENUM('Dimagrimento', 'PotenziamentoMuscolare', 'Ricreativo') NOT NULL,
    PRIMARY KEY (NomeScopo)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;


CREATE TABLE Muscolo (
    NomeMuscolo VARCHAR(255) NOT NULL,
    PRIMARY KEY (NomeMuscolo)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;


CREATE TABLE Target (
    Muscolo VARCHAR(255) NOT NULL,
    Cliente VARCHAR(255) NOT NULL,
    LivelloPotenziamento ENUM('lieve', 'moderato', 'elevato') NOT NULL,
    PRIMARY KEY (Muscolo , Cliente)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;


CREATE TABLE Amicizia (
    Ricevente VARCHAR(255) NOT NULL,
    Richiedente VARCHAR(255) NOT NULL,
    Stato ENUM ('Accettata', 'Rifiutata', 'In attesa'),
    PRIMARY KEY (Ricevente , Richiedente)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;


CREATE TABLE Misurazione (
    Cliente VARCHAR(255) NOT NULL,
    DataMisurazione DATE NOT NULL,
    AcquaTotale DOUBLE NOT NULL,
    MassaMagra DOUBLE NOT NULL,
    MassaGrassa DOUBLE NOT NULL,
    Peso DOUBLE NOT NULL,
    Altezza DOUBLE NOT NULL,
    IMC DOUBLE NOT NULL,
    Stato ENUM('Sovrappeso', 'Normopeso', 'Sottopeso'),
    PRIMARY KEY (Cliente , DataMisurazione)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;


CREATE TABLE Attivita (
    Nome VARCHAR(255) NOT NULL,
    PRIMARY KEY (Nome)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;


CREATE TABLE Interesse (
    Attivita VARCHAR(255) NOT NULL,
    Cliente VARCHAR(255) NOT NULL,
    PRIMARY KEY (Attivita , Cliente)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;


CREATE TABLE SchedaAlimentazione (
    CodScheda INTEGER NOT NULL AUTO_INCREMENT,
    DataInizioScheda DATE NOT NULL,
    DataFineScheda DATE,
    FrequenzaVisita INTEGER NOT NULL,
    Obiettivo VARCHAR(255) NOT NULL,
    Cliente VARCHAR(255) NOT NULL,
    Medico VARCHAR(255) NOT NULL,
    Dieta INTEGER NOT NULL,
    PRIMARY KEY (CodScheda)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;

CREATE TABLE Dieta (
    CodDieta INTEGER NOT NULL AUTO_INCREMENT,
    NumeroPasti INTEGER NOT NULL,
    ApportoCalorico DOUBLE NOT NULL,
    PRIMARY KEY (CodDieta)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;


CREATE TABLE Pasto (
    Nome VARCHAR(255) NOT NULL,
    Composizione ENUM('Proteine', 'Grassi', 'Carboidrati') NOT NULL,
    PRIMARY KEY (Nome)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;


CREATE TABLE ComposizioneDieta (
    Dieta INTEGER NOT NULL,
    Pasto VARCHAR(255) NOT NULL,
    PRIMARY KEY (Dieta , Pasto)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;


CREATE TABLE Integratore (
    CodIntegratore INTEGER NOT NULL AUTO_INCREMENT,
    NomeCommerciale VARCHAR(255) NOT NULL,
    Sostanza VARCHAR(255) NOT NULL,
    Concentrazione DOUBLE NOT NULL,
    DataScadenza DATE NOT NULL,
    NumeroPezzi INTEGER NOT NULL,
    Forma ENUM('Compressa', 'Liquido', 'Polvere') NOT NULL,
    PrezzoIngrosso DOUBLE NOT NULL,
    PrezzoDettaglio DOUBLE NOT NULL,
    PRIMARY KEY (CodIntegratore)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;


CREATE TABLE Abbinamento (
    SchedaAlimentazione INTEGER NOT NULL,
    Integratore INTEGER NOT NULL,
    PRIMARY KEY (SchedaAlimentazione , Integratore)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;


CREATE TABLE Acquisto (
    CodAcquisto INTEGER NOT NULL AUTO_INCREMENT,
    DataAcquisto DATE NOT NULL,
    Quantita INTEGER NOT NULL,
    Integratore INTEGER NOT NULL,
    Cliente VARCHAR(255) NOT NULL,
    Importo DOUBLE NOT NULL,
    PRIMARY KEY (CodAcquisto)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;


CREATE TABLE Ordine (
    CodOrdine INTEGER NOT NULL AUTO_INCREMENT,
    Stato ENUM('Incompleto', 'Evaso'),
    DataEvasione DATE,
    DataConsegna DATE NOT NULL,
    Centro INTEGER NOT NULL,
    Fornitore INTEGER NOT NULL,
    PRIMARY KEY (CodOrdine)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;


CREATE TABLE OrdineIntegratore (
    Integratore INTEGER NOT NULL,
    Ordine INTEGER NOT NULL,
    Quantita INTEGER NOT NULL,
    PRIMARY KEY (Integratore, Ordine)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;


CREATE TABLE Fornitore (
    PartitaIva INTEGER NOT NULL,
    NomeCommerciale VARCHAR(255) NOT NULL,
    NumeroTelefonico INTEGER NOT NULL,
    Indirizzo VARCHAR(255) NOT NULL,
    FormaSocietaria VARCHAR(255) NOT NULL,
    PRIMARY KEY (PartitaIva)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;


CREATE TABLE Commercializzazione (
    Fornitore INTEGER NOT NULL,
    Integratore INTEGER NOT NULL,
    CodEsterno VARCHAR(255) NOT NULL,
    PRIMARY KEY (Fornitore , Integratore)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;

CREATE TABLE Cerchia (
    CodCerchia INTEGER NOT NULL AUTO_INCREMENT,
    Nome VARCHAR(255) NOT NULL,
    Cliente VARCHAR(255) NOT NULL,
    PRIMARY KEY (CodCerchia)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;


CREATE TABLE Appartenenza (
    Cerchia INTEGER NOT NULL,
    Cliente VARCHAR(255) NOT NULL,
    PRIMARY KEY (Cerchia , Cliente)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;

CREATE TABLE Post (
    CodPost INTEGER NOT NULL AUTO_INCREMENT,
    Testo VARCHAR(255) NOT NULL,
    Topic VARCHAR(255) NOT NULL,
    Timestamp DATETIME NOT NULL,
    Cliente VARCHAR(255) NOT NULL,
    Thread VARCHAR(255) NOT NULL,
    PRIMARY KEY (CodPost)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;


CREATE TABLE Collegamento (
    URL VARCHAR(255) NOT NULL,
    Post INTEGER NOT NULL,
    PRIMARY KEY (URL , Post)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;




CREATE TABLE Thread (
    TitoloThread VARCHAR(255) NOT NULL,
    Cliente VARCHAR(255) NOT NULL,
    PRIMARY KEY (TitoloThread)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;


CREATE TABLE ValutazionePost (
    Cliente VARCHAR(255) NOT NULL,
    Post INTEGER NOT NULL,
    Giudizio ENUM('Positivo', 'Negativo') NOT NULL,
    PRIMARY KEY (Cliente , Post)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;

CREATE TABLE SchedaAllenamento (
    CodScheda INTEGER NOT NULL AUTO_INCREMENT,
    DataInizioScheda DATE NOT NULL,
    DataFineScheda DATE NOT NULL,
    Cliente VARCHAR(255) NOT NULL,
    DataAssegnazione DATE NOT NULL,
    Tutor VARCHAR(255) NOT NULL,
    PRIMARY KEY (CodScheda)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;


CREATE TABLE Esercizio (
    CodEsercizio INTEGER NOT NULL AUTO_INCREMENT,
    Nome VARCHAR(255) NOT NULL,
    DispendioEnergetico DOUBLE NOT NULL,
    TotEsecuzioni INTEGER NOT NULL,
    TotDurata INTEGER NOT NULL,
    TotVoto INTEGER NOT NULL,
    PRIMARY KEY (CodEsercizio)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;




CREATE TABLE Composizione (
    Scheda INTEGER NOT NULL,
    Esercizio INTEGER NOT NULL,
    PRIMARY KEY (Scheda , Esercizio)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;


CREATE TABLE Configurazione (
    CodiceConf INTEGER NOT NULL,
    Esercizio INTEGER NOT NULL,
    PRIMARY KEY (CodiceConf , Esercizio)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;

CREATE TABLE Aerobico (
    CodEsercizio INTEGER NOT NULL AUTO_INCREMENT,
    Durata INTEGER NOT NULL,
    PRIMARY KEY (CodEsercizio)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;


CREATE TABLE Anaerobico (
    CodEsercizio INTEGER NOT NULL AUTO_INCREMENT,
    TempoRecupero INTEGER NOT NULL,
    NumeroRipetizioni INTEGER NOT NULL,
    PRIMARY KEY (CodEsercizio)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;


CREATE TABLE Ripetizione (
    CodEsercizio INTEGER NOT NULL,
    NumeroRipetizione INTEGER NOT NULL,
    PRIMARY KEY (CodEsercizio , NumeroRipetizione)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;


CREATE TABLE ConfigurazioneRipetizione (
    CodConf INTEGER NOT NULL,
    NumeroRipetizione INTEGER NOT NULL,
    Esercizio INTEGER NOT NULL,
    PRIMARY KEY (CodConf, Esercizio, NumeroRipetizione)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;

CREATE TABLE Sfida (
    CodSfida INTEGER NOT NULL AUTO_INCREMENT,
    DataInizio DATE NOT NULL,
    DataFine DATE NOT NULL,
    DataLancio DATE NOT NULL,
    Scopo VARCHAR(255) NOT NULL,
    Cliente VARCHAR(255) NOT NULL,
    PRIMARY KEY (CodSfida)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;


CREATE TABLE Partecipazione (
    Sfida INTEGER NOT NULL,
    Cliente VARCHAR(255) NOT NULL,
    PRIMARY KEY (Sfida , Cliente)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;


CREATE TABLE AbbinamentoAlimentazione (
    Sfida INTEGER NOT NULL,
    SchedaAlimentazione INTEGER NOT NULL,
    PRIMARY KEY (Sfida , SchedaAlimentazione)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;

CREATE TABLE GiornoSfida (
    CodSfida INTEGER NOT NULL,
    Giorno INTEGER NOT NULL,
    SchedaAllenamento INTEGER NOT NULL,
    PRIMARY KEY (CodSfida , Giorno)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;

CREATE TABLE ValutazioneSfida (
    Cliente VARCHAR(255) NOT NULL,
    CodSfida INTEGER NOT NULL,
    Giorno INTEGER NOT NULL,
    GiudizioPsichico ENUM('Positivo', 'Negativo') NOT NULL,
    GiudizioFisico ENUM('Positivo', 'Negativo') NOT NULL,
    PRIMARY KEY (Cliente , CodSfida , Giorno)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;

CREATE TABLE PrestazioneEsercizio (
    CodPrestazione INTEGER NOT NULL AUTO_INCREMENT,
    ValutazionePrestazione DOUBLE,
    TimestampInizio DATETIME NOT NULL,
    TimestampFine DATETIME,
    Cliente VARCHAR(255) NOT NULL,
    Esercizio INTEGER NOT NULL,
    Durata INTEGER,
    TempoRecupero INTEGER,
    NumeroRipetizioni INTEGER,
    PRIMARY KEY (CodPrestazione)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;

CREATE TABLE RegolazioneReale (
    CodPrestazione INTEGER NOT NULL,
    NomeRegolazione VARCHAR(255) NOT NULL,
    Attrezzatura INTEGER NOT NULL,
    PRIMARY KEY (CodPrestazione , NomeRegolazione , Attrezzatura)
)  ENGINE=INNODB DEFAULT CHARSET=LATIN1;


ALTER TABLE Centro
   ADD FOREIGN KEY(Direttore)
   REFERENCES DIRETTORE(CodFiscale)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION;

ALTER TABLE Turnazione
   ADD FOREIGN KEY(Centro)
   REFERENCES CENTRO(CodCentro)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION,

   ADD FOREIGN KEY(Giorno)
   REFERENCES GIORNO(Nome)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION,

   ADD FOREIGN KEY(Dipendente)
   REFERENCES DIPENDENTE(CodFiscale)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION;


ALTER TABLE Rata
   ADD FOREIGN KEY(Cliente)
   REFERENCES CLIENTE(CodFiscale)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION,
   
   ADD FOREIGN KEY(IstitutoFinanziario)
   REFERENCES ISTITUTOFINANZIARIO(CodIstituto)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION;
   

ALTER TABLE Convenzione
   
   ADD FOREIGN KEY(Istituto)
   REFERENCES ISTITUTOFINANZIARIO(CodIstituto)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION,
   
   ADD FOREIGN KEY(Centro)
   REFERENCES CENTRO(CodCentro)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION;



ALTER TABLE OrarioDiServizio
   
   ADD FOREIGN KEY(Centro)
   REFERENCES CENTRO(CodCentro)
   ON UPDATE NO ACTION 
   ON DELETE NO ACTION,
   
   ADD FOREIGN KEY(Giorno)
   REFERENCES GIORNO(Nome)
   ON UPDATE NO ACTION 
   ON DELETE NO ACTION;


ALTER TABLE PianificazioneCorso
   
   ADD FOREIGN KEY(Giorno)
   REFERENCES GIORNO(Nome) 
   ON UPDATE NO ACTION
   ON DELETE NO ACTION,
   
   ADD FOREIGN KEY(Luogo)
   REFERENCES LUOGOALLENAMENTO(CodLuogo)
   ON UPDATE NO ACTION 
   ON DELETE NO ACTION,
   
   ADD FOREIGN KEY(Corso)
   REFERENCES CORSO(CodCorso)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION;


ALTER TABLE LUOGOAllenamento

   ADD FOREIGN KEY(Centro)
   REFERENCES CENTRO(CodCentro)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION;


ALTER TABLE Sala

   ADD FOREIGN KEY(Luogo)
   REFERENCES LUOGOALLENAMENTO(CodLuogo)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION,
   
   ADD FOREIGN KEY(ResponsabileSala)
   REFERENCES RESPONSABILESALA(CodFiscale)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION;


ALTER TABLE Piscina
   ADD FOREIGN KEY(Luogo)
   REFERENCES LUOGOALLENAMENTO(CodLuogo)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION;


ALTER TABLE Dipendente
   
   ADD FOREIGN KEY(ResponsabilePersonale)
   REFERENCES RESPONSABILEPERSONALE(CodFiscale)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION;
 

ALTER TABLE Impiego
   ADD FOREIGN KEY(Centro)
   REFERENCES CENTRO(CodCentro) 
   ON UPDATE NO ACTION
   ON DELETE NO ACTION,
   
   ADD FOREIGN KEY(Dipendente)
   REFERENCES DIPENDENTE(CodFiscale)
   ON UPDATE NO ACTION 
   ON DELETE NO ACTION;


ALTER TABLE Attrezzatura

   ADD FOREIGN KEY(Sala)
   REFERENCES SALA(Luogo) 
   ON UPDATE NO ACTION
   ON DELETE NO ACTION;



ALTER TABLE Regolazione
   ADD FOREIGN KEY(Attrezzatura)
   REFERENCES ATTREZZATURA(CodAttrezzatura)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION;



ALTER TABLE ConfigurazioneEsercizio

   ADD FOREIGN KEY(Esercizio)
   REFERENCES ESERCIZIO(CodEsercizio)
   ON UPDATE NO ACTION 
   ON DELETE NO ACTION,
   
   ADD FOREIGN KEY(Attrezzatura)
   REFERENCES ATTREZZATURA(CodAttrezzatura)
   ON UPDATE NO ACTION 
   ON DELETE NO ACTION;


ALTER TABLE RegolazioneEsercizio

   ADD FOREIGN KEY(Configurazione)
   REFERENCES CONFIGURAZIONEESERCIZIO(CodConfigurazione)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION,
   
   ADD FOREIGN KEY(Attrezzatura)
   REFERENCES ATTREZZATURA(CodAttrezzatura)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION;


ALTER TABLE Spogliatoio
   
   ADD FOREIGN KEY(Centro)
   REFERENCES CENTRO(CodCentro)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION;


ALTER TABLE Armadietto
   
   ADD FOREIGN KEY(Spogliatoio)
   REFERENCES Spogliatoio(CodSpogliatoio)
   ON UPDATE NO ACTION 
   ON DELETE NO ACTION;


ALTER TABLE Accesso
   
   ADD FOREIGN KEY(Armadietto)
   REFERENCES ARMADIETTO(CodArmadietto)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION,
   
   ADD FOREIGN KEY(Centro)
   REFERENCES CENTRO(CodCentro)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION,
   
   ADD FOREIGN KEY(Cliente)
   REFERENCES CLIENTE(CodFiscale)
   ON UPDATE NO ACTION 
   ON DELETE NO ACTION;


ALTER TABLE Medico

   ADD FOREIGN KEY(CodFiscale)
   REFERENCES DIPENDENTE(CodFiscale)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION;


ALTER TABLE Visita
   
   ADD FOREIGN KEY(Medico)
   REFERENCES Medico(CodFiscale)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION,
   
   ADD FOREIGN KEY(Cliente)
   REFERENCES CLIENTE(CodFiscale)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION;


ALTER TABLE Cliente
   
   ADD FOREIGN KEY(Medico)
   REFERENCES MEDICO(CodFiscale)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION,
   
   ADD FOREIGN KEY(Tutor)
   REFERENCES TUTOR(CodFiscale)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION,
   
   ADD FOREIGN KEY(Scopo)
   REFERENCES SCOPO(NomeScopo)
   ON UPDATE NO ACTION 
   ON DELETE NO ACTION;


ALTER TABLE Corso
   
   ADD FOREIGN KEY(Istruttore)
   REFERENCES ISTRUTTORE(CodFiscale)
   ON UPDATE NO ACTION 
   ON DELETE NO ACTION;


ALTER TABLE Istruttore
    
    ADD FOREIGN KEY(CodFiscale)
    REFERENCES DIPENDENTE(CodFiscale)
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE ResponsabilePersonale
   ADD FOREIGN KEY(CodFiscale)
   REFERENCES DIPENDENTE(CodFiscale)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION;


ALTER TABLE Direttore
   
   ADD FOREIGN KEY(CodFiscale)
   REFERENCES DIPENDENTE(CodFiscale)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION;

ALTER TABLE ResponsabileSala
   
   ADD FOREIGN KEY(CodFiscale)
   REFERENCES DIPENDENTE(CodFiscale)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION;


ALTER TABLE Tutor

   ADD FOREIGN KEY(CodFiscale)
   REFERENCES DIPENDENTE(CodFiscale) 
   ON UPDATE NO ACTION
   ON DELETE NO ACTION;


ALTER TABLE Consulente
   
   ADD FOREIGN KEY(CodFiscale)
   REFERENCES DIPENDENTE(CodFiscale)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION;


ALTER TABLE Iscrizione
   
   ADD FOREIGN KEY(Cliente)
   REFERENCES CLIENTE(CodFiscale)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION,
   
   ADD FOREIGN KEY(Corso)
   REFERENCES CORSO(CodCorso)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION;


ALTER TABLE Contratto
   
   ADD FOREIGN KEY(Cliente)
   REFERENCES CLIENTE(CodFiscale)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION,
   
   ADD FOREIGN KEY(Consulente)
   REFERENCES CONSULENTE(CodFiscale)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION,
   
   ADD FOREIGN KEY(Centro)
   REFERENCES CENTRO(CodCentro)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION;


ALTER TABLE Offerta
   
   ADD FOREIGN KEY(Centro)
   REFERENCES CENTRO(CodCentro)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION;


ALTER TABLE InclusioneOfferta
   
   ADD FOREIGN KEY(Contratto)
   REFERENCES CONTRATTO(CodContratto)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION,
   
   ADD FOREIGN KEY(Offerta)
   REFERENCES OFFERTA(CodOfferta)
   ON UPDATE NO ACTION 
   ON DELETE NO ACTION;


ALTER TABLE OffertaLuogo
   ADD FOREIGN KEY(Offerta)
   REFERENCES OFFERTA(CodOfferta)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION,
   
   ADD FOREIGN KEY(Luogo)
   REFERENCES LUOGOALLENAMENTO(CodLuogo)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION;


ALTER TABLE OffertaCorso
   
   ADD FOREIGN KEY(Offerta)
   REFERENCES OFFERTA(CodOfferta)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION,
   
   ADD FOREIGN KEY(Corso)
   REFERENCES CORSO(CodCorso)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION;


ALTER TABLE Target
   
   ADD FOREIGN KEY(Muscolo)
   REFERENCES MUSCOLO(NomeMuscolo)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION,
   
   ADD FOREIGN KEY(Cliente)
   REFERENCES CLIENTE(CodFiscale)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION;


ALTER TABLE Amicizia
   ADD FOREIGN KEY(Ricevente)
   REFERENCES CLIENTE(CodFiscale)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION,
   
   ADD FOREIGN KEY(Richiedente)
   REFERENCES CLIENTE(CodFiscale)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION;


ALTER TABLE Misurazione
   
   ADD FOREIGN KEY(Cliente)
   REFERENCES CLIENTE(CodFiscale)
   ON UPDATE NO ACTION 
   ON DELETE NO ACTION;



ALTER TABLE Interesse

   ADD FOREIGN KEY(Attivita)
   REFERENCES ATTIVITA(Nome)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION,
   
   ADD FOREIGN KEY(Cliente)
   REFERENCES CLIENTE(CodFiscale)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION;


ALTER TABLE SchedaAlimentazione
   
   ADD FOREIGN KEY(Cliente)
   REFERENCES CLIENTE(CodFiscale)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION,
   
   ADD FOREIGN KEY(Medico)
   REFERENCES MEDICO(CodFiscale)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION,
   
   ADD FOREIGN KEY(Dieta)
   REFERENCES DIETA(CodDieta)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION;


ALTER TABLE ComposizioneDieta
   ADD FOREIGN KEY(Dieta)
   REFERENCES DIETA(CodDieta)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION,
   
   ADD FOREIGN KEY(Pasto)
   REFERENCES PASTO(Nome)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION;



ALTER TABLE Abbinamento
   ADD FOREIGN KEY(SchedaAlimentazione)
   REFERENCES SCHEDAALIMENTAZIONE(CodScheda)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION,
   
   ADD FOREIGN KEY(Integratore)
   REFERENCES INTEGRATORE(CodIntegratore)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION;


ALTER TABLE Acquisto
   
   ADD FOREIGN KEY(Integratore)
   REFERENCES INTEGRATORE(CodIntegratore)
   ON UPDATE NO ACTION 
   ON DELETE NO ACTION,
   
   ADD FOREIGN KEY(Cliente)
   REFERENCES CLIENTE(CodFiscale)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION;


ALTER TABLE Ordine
   ADD FOREIGN KEY(Centro)
   REFERENCES CENTRO(CodCentro)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION,
   
   ADD FOREIGN KEY(Fornitore)
   REFERENCES FORNITORE(PartitaIva)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION;


ALTER TABLE OrdineIntegratore
   
   ADD FOREIGN KEY(Integratore)
   REFERENCES INTEGRATORE(CodIntegratore)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION,
   
   ADD FOREIGN KEY(Ordine)
   REFERENCES ORDINE(CodOrdine)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION;


ALTER TABLE Commercializzazione
   
   ADD FOREIGN KEY(Fornitore)
   REFERENCES FORNITORE(PartitaIva)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION,
   
   ADD FOREIGN KEY(Integratore)
   REFERENCES INTEGRATORE(CodIntegratore)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION;

ALTER TABLE Cerchia
   
   ADD FOREIGN KEY(Cliente)
   REFERENCES CLIENTE(CodFiscale)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION;


ALTER TABLE Appartenenza
   
   ADD FOREIGN KEY(Cerchia)
   REFERENCES CERCHIA(CodCerchia)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION,
   
   ADD FOREIGN KEY(Cliente)
   REFERENCES CLIENTE(CodFiscale)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION;


ALTER TABLE Post
   
   ADD FOREIGN KEY(Cliente)
   REFERENCES CLIENTE(CodFiscale)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION,
   
   ADD FOREIGN KEY(Thread)
   REFERENCES THREAD(TitoloThread)
   ON UPDATE NO ACTION 
   ON DELETE NO ACTION;


ALTER TABLE Collegamento
   ADD FOREIGN KEY(Post)
   REFERENCES POST(CodPost)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION;


ALTER TABLE Thread
   ADD FOREIGN KEY(Cliente)
   REFERENCES CLIENTE(CodFiscale)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION;


ALTER TABLE ValutazionePost
   
   ADD FOREIGN KEY(Cliente)
   REFERENCES CLIENTE(CodFiscale)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION,
   
   ADD FOREIGN KEY(Post)
   REFERENCES POST(CodPost)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION;


ALTER TABLE SchedaAllenamento
   
   ADD FOREIGN KEY(Cliente)
   REFERENCES CLIENTE(CodFiscale)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION,
   
   ADD FOREIGN KEY(Tutor)
   REFERENCES TUTOR(CodFiscale)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION;


ALTER TABLE Composizione
   ADD FOREIGN KEY(Scheda)
   REFERENCES SCHEDAALLENAMENTO(CodScheda)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION,
   
   ADD FOREIGN KEY(Esercizio)
   REFERENCES ESERCIZIO(CodEsercizio)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION;


ALTER TABLE Configurazione
   
   ADD FOREIGN KEY(Esercizio)
   REFERENCES ESERCIZIO(CodEsercizio)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION;


ALTER TABLE Aerobico
   
   ADD FOREIGN KEY(CodEsercizio)
   REFERENCES ESERCIZIO(CodEsercizio)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION;


ALTER TABLE Anaerobico
   
   ADD FOREIGN KEY(CodEsercizio)
   REFERENCES ESERCIZIO(CodEsercizio)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION;

ALTER TABLE Ripetizione
   
   ADD FOREIGN KEY(CodEsercizio)
   REFERENCES ESERCIZIO(CodEsercizio)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION;


   
ALTER TABLE ConfigurazioneRipetizione
   ADD FOREIGN KEY(CodConf)
   REFERENCES CONFIGURAZIONEESERCIZIO(CodConfigurazione)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION;


ALTER TABLE Sfida
   
   ADD FOREIGN KEY(Cliente)
   REFERENCES CLIENTE(CodFiscale)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION;


ALTER TABLE Partecipazione
   
   ADD FOREIGN KEY(Sfida)
   REFERENCES SFIDA(CodSfida)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION,
   
   ADD FOREIGN KEY(Cliente)
   REFERENCES CLIENTE(CodFiscale)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION;


ALTER TABLE AbbinamentoAlimentazione
   
   ADD FOREIGN KEY(Sfida)
   REFERENCES SFIDA(CodSfida)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION,
   
   ADD FOREIGN KEY(SchedaAlimentazione)
   REFERENCES SCHEDAALIMENTAZIONE(CodScheda)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION;

ALTER TABLE GiornoSfida
   
   ADD FOREIGN KEY(CodSfida)
   REFERENCES SFIDA(CodSfida)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION,
   
   ADD FOREIGN KEY(SchedaAllenamento)
   REFERENCES SCHEDAALLENAMENTO(CodScheda)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION;





ALTER TABLE ValutazioneSfida
   
   ADD FOREIGN KEY(Cliente)
   REFERENCES CLIENTE(CodFiscale) 
   ON UPDATE NO ACTION
   ON DELETE NO ACTION,
   
   ADD FOREIGN KEY(CodSfida)
   REFERENCES SFIDA(CodSfida)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION;
   

ALTER TABLE PrestazioneEsercizio
   
   ADD FOREIGN KEY(Cliente)
   REFERENCES CLIENTE(CodFiscale) 
   ON UPDATE NO ACTION
   ON DELETE NO ACTION,
   
   ADD FOREIGN KEY(Esercizio)
   REFERENCES ESERCIZIO(CodEsercizio)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION;



ALTER TABLE RegolazioneReale

   ADD FOREIGN KEY(CodPrestazione)
   REFERENCES PRESTAZIONEESERCIZIO(CodPrestazione)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION,
   
   ADD FOREIGN KEY(Attrezzatura)
   REFERENCES ATTREZZATURA(CodAttrezzatura)
   ON UPDATE NO ACTION
   ON DELETE NO ACTION;


